# -*- coding: utf-8 -*-
"""K-Means.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Tdcp47FbEM2w_Tcni5mo6kVdBYvCDhTT
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('customers.csv')
df.head(5)

df.info()

df.isnull().sum()

df.describe()

df.duplicated().sum()

for column in df.columns:
    plt.figure(figsize=(6, 4))
    sns.boxplot(data=df[column])
    plt.title(f'Boxplot of {column}')
    plt.show()

for col in df.columns:
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3 - Q1
    lower = Q1 - 1.5*IQR
    upper = Q3 + 1.5*IQR
    df[col] = df[col].apply(lambda x: upper if x > upper else lower if x < lower else x)

for column in df.columns:
    plt.figure(figsize=(6, 4))
    sns.histplot(data=df[column], bins=30, kde=True)
    plt.title(f'Distribution of {column}')
    plt.show()

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

# fit scaler, to learn the parameters
scaler.fit(df)

# Transform df
df_scaled = scaler.transform(df)

from sklearn.cluster import KMeans

wcss = []
for i in range(2, 10):
    kmeans = KMeans(n_clusters=i, random_state=42)
    kmeans.fit(df)
    wcss.append(kmeans.inertia_)

plt.plot(range(2, 10), wcss)
plt.title('The Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.grid(True)
plt.show()

from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=4, init='k-means++', random_state=42)
kmeans.fit(df_scaled)

df['Cluster'] = kmeans.labels_

print("Cluster size :-")
print(df['Cluster'].value_counts())

