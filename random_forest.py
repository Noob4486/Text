# -*- coding: utf-8 -*-
"""Random_Forest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ND3yKQsvuqQm0er0Dap901JcmDy8EpQk
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('adult.csv')
df.head(5)

df.isnull().sum()

df.describe()

df_missing = (df=='?').sum()
df_missing

df = df[df['workclass'] !='?']
df = df[df['occupation'] !='?']
df = df[df['native-country'] !='?']

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

df_cat = df.select_dtypes(include=['object'])
df_cat = df_cat.apply(le.fit_transform)
df_cat.head(3)

df = df.drop(df_cat.columns,axis=1)
df = pd.concat([df,df_cat],axis=1)
df.head()

from sklearn.model_selection import train_test_split

x = df.drop('income', axis=1)
y = df['income']

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.20)

from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(random_state = 42)
model.fit(x_train, y_train)

from sklearn.metrics import accuracy_score, confusion_matrix

x_test_pred = model.predict(x_test)
print("Accuracy:", accuracy_score(y_test, x_test_pred)*100)

cm = pd.DataFrame(confusion_matrix(y_test, x_test_pred), columns=['Actual -ve', 'Actual +ve'], index=['Predicted -ve', 'Predicted +ve'])
cm

from sklearn.metrics import classification_report
print(classification_report(y_test, x_test_pred))

